version: '3.6'

networks:
  change-detection-network:
    driver: bridge

services:
  influxdb:
    image: influxdb:latest
    ports:
      - "8086:8086"
    volumes:
      - influxdb-data:/var/lib/influxdb2
    environment:
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_PASSWORD=password
      - INFLUXDB_BUCKET=ChangeDetection
      - INFLUXDB_ORG=ChangeDetection_org
    networks:
      - change-detection-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - 3000:3000
    volumes:
      - grafana-volume:/var/lib/grafana
    depends_on:
      - influxdb
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USERNAME}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
    networks:
      - change-detection-network

  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - change-detection-network  

  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    networks:
      - change-detection-network  

  kafka_manager:
    image: hlebalbau/kafka-manager:stable
    ports:
      - "9000:9000"
    environment:
      ZK_HOSTS: "zookeeper:2181"
      APPLICATION_SECRET: "random-secret"
    networks:
      - change-detection-network  

  kafka_data_stream_conversion:
    build:
      context: ./data_stream
      dockerfile: Dockerfile
    volumes:
      - ./data_stream:/app  
    depends_on:
      - kafka
    environment:
      - KAFKA_BROKER=kafka:9092
    networks:
      - change-detection-network  

  model_training:
    build:
      context: ./model
      dockerfile: Dockerfile
    volumes:
      - ./model:/app  
    depends_on:
      - influxdb  
    environment:
      - INFLUXDB_URL=http://influxdb:8086  
      - INFLUXDB_TOKEN=Ht9v0imQleHMiq1e-mb1E-Ci0dt3ANytCvuQZS3ZeYS3IbWvFXekPOOQjkGYLkjy8CTr0k6EzPdNM_BlOpQIEQ==  # InfluxDB token
      - INFLUXDB_ORG=ChangeDetection_org
      - INFLUXDB_BUCKET=ChangeDetection
    networks:
      - change-detection-network  

  saving_influxdb: 
    build:
      context: ./influxdb_save
      dockerfile: Dockerfile
    depends_on:
      - kafka  
      - influxdb  
    environment:
      - KAFKA_SERVER=kafka:9092
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_TOKEN=Ht9v0imQleHMiq1e-mb1E-Ci0dt3ANytCvuQZS3ZeYS3IbWvFXekPOOQjkGYLkjy8CTr0k6EzPdNM_BlOpQIEQ==
      - INFLUXDB_ORG=ChangeDetection_org
      - INFLUXDB_BUCKET=ChangeDetection
    volumes:
      - ./influxdb_save:/app 
    networks:
      - change-detection-network  

  local_base:
    build:
      context: .
      dockerfile: Dockerfile
    image: local_base

  # page_hinkley: 
  #   build:
  #     context: ./page_hinkley
  #     dockerfile: Dockerfile
  #   depends_on:
  #     - kafka
  #     - pyspark
  #   environment:
  #     - KAFKA_BROKER=kafka:9092
  #   volumes:
  #     - ./page_hinkley:/app/page_hinkley
  #     - ./model:/app/model   
  #   working_dir: /app/page_hinkley
  #   networks:
  #     - change-detection-network

  # ddm: 
  #   build:
  #     context: ./ddm
  #     dockerfile: Dockerfile
  #   depends_on:
  #     - kafka
  #     - pyspark
  #   environment:
  #     - KAFKA_BROKER=kafka:9092
  #   volumes:
  #     - ./ddm:/app/ddm
  #     - ./model:/app/model   
  #   working_dir: /app/ddm
  #   networks:
  #     - change-detection-network

  # adwin: 
  #   build:
  #     context: ./adwin
  #     dockerfile: Dockerfile
  #   depends_on:
  #     - kafka
  #     - pyspark
  #   environment:
  #     - KAFKA_BROKER=kafka:9092
  #   volumes:
  #     - ./adwin:/app/adwin
  #     - ./model:/app/model   
  #   working_dir: /app/adwin
  #   networks:
  #     - change-detection-network

  # ks:
  #   build:
  #     context: ./ks
  #     dockerfile: Dockerfile
  #   depends_on:
  #     - kafka
  #     - pyspark
  #   environment:
  #     - KAFKA_BROKER=kafka:9092
  #   volumes:
  #     - ./ks:/app/ks
  #     - ./model:/app/model   
  #   working_dir: /app/ks
  #   networks:
  #     - change-detection-network

  # eddm:
  #   build:
  #     context: ./eddm
  #     dockerfile: Dockerfile
  #   depends_on:
  #     - kafka
  #     - pyspark
  #   environment:
  #     - KAFKA_BROKER=kafka:9092
  #   volumes:
  #     - ./eddm:/app/eddm
  #     - ./model:/app/model   
  #   working_dir: /app/eddm
  #   networks:
  #     - change-detection-network

  # stream_statistical_analysis: 
  #   build:
  #     context: ./stream_statistics
  #     dockerfile: Dockerfile
  #   depends_on:
  #     - kafka
  #     - pyspark
  #   environment:
  #     - KAFKA_BROKER=kafka:9092
  #   volumes:
  #     - ./stream_statistics:/app/stream_statistics
  #     - ./model:/app/model   
  #   working_dir: /app/stream_statistics
  #   networks:
  #     - change-detection-network

  # stream_window_statistical_analysis: 
  #   build:
  #     context: ./stream_window_statisitcs
  #     dockerfile: Dockerfile
  #   depends_on:
  #     - kafka
  #     - pyspark
  #     - local_base
  #   environment:
  #     - KAFKA_BROKER=kafka:9092
  #   volumes:
  #     - ./stream_window_statisitcs:/app/stream_window_statisitcs
  #     - ./model:/app/model   
  #   working_dir: /app/stream_window_statisitcs
  #   networks:
  #     - change-detection-network

  pyspark:
    image: bitnami/spark:3.3.0
    platform: linux/amd64  # Force Docker to use the x86_64 version
    ports:
      - "8888:8888"
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    volumes:
      - ./:/home/jovyan/work
    depends_on:
      - kafka
      - influxdb
    networks:
      - change-detection-network

volumes:
  influxdb-data:
  zookeeper-data:
    driver: local
  kafka-data:
    driver: local
  grafana-volume:
